# Copyright 2025 [ILGIZAR YAMILOV]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Quantum Hello World: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–Ω—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–ª–ª–∞–ø—Å–∞.
–≠—Ç–æ –Ω–µ —É—Ç–∏–ª–∏—Ç–∞, –∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã Semantic Collider.
"""

import openai

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (—Ç—Ä–µ–±—É—é—Ç –Ω–∞–ª–∏—á–∏—è API-–∫–ª—é—á–∞)
client = openai.OpenAI(api_key='your_api_key_here')  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∫–ª—é—á

def collapse(query: str, ontology: str) -> str:
    """
    –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –∫–æ–ª–ª–∞–ø—Å –∑–∞–ø—Ä–æ—Å–∞ –≤ –∑–∞–¥–∞–Ω–Ω–æ–π –æ–Ω—Ç–æ–ª–æ–≥–∏–∏.
    
    Args:
        query: –ò—Å—Ö–æ–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        ontology: –†–æ–ª—å/–æ–Ω—Ç–æ–ª–æ–≥–∏—è –¥–ª—è –∫–æ–ª–ª–∞–ø—Å–∞ (—É—á–µ–Ω—ã–π, –ø–æ—ç—Ç –∏ —Ç.–¥.)
    
    Returns:
        str: –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–ª–ª–∞–ø—Å–∞ ‚Äî –æ—Ç–≤–µ—Ç –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ–Ω—Ç–æ–ª–æ–≥–∏–∏.
    """
    prompt = f"""
    –¢—ã ‚Äî {ontology}. –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å –≤ —Å–≤–æ–µ–º —Å—Ç–∏–ª–µ, –∫—Ä–∞—Ç–∫–æ –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω–æ.
    –í–æ–ø—Ä–æ—Å: {query}
    """
    try:
        response = client.chat.completions.create(
            model="gpt-4",
            messages=[{"role": "user", "content": prompt}]
        )
        return response.choices[0].message.content
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –∫–æ–ª–ª–∞–ø—Å–∞: {e}"

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∞—è –ø—Ä–æ—Ü–µ—Å—Å –∫–æ–ª–ª–∞–ø—Å–∞."""
    print("=== QUANTUM HELLO WORLD ===\n")
    print("–°–æ—Å—Ç–æ—è–Ω–∏–µ: |Œ®> = –§–µ–π–Ω—Ç\n")
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_query = input("–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –í—Å–µ–ª–µ–Ω–Ω–æ–π: ")
    
    print("\n--- –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∫–æ–ª–ª–∞–ø—Å–∞ ---\n")
    
    # –ö–æ–ª–ª–∞–ø—Å –≤ –Ω–∞—É—á–Ω–æ–π –æ–Ω—Ç–æ–ª–æ–≥–∏–∏
    print("üß™ –ù–ê–£–ß–ù–´–ô –ö–û–õ–õ–ê–ü–° (Œ£=–£—á–µ–Ω—ã–π):")
    science_answer = collapse(user_query, "—É—á–µ–Ω—ã–π-—Ñ–∏–∑–∏–∫, —Å—Ç—Ä–æ–≥–∏–π –∏ –ª–æ–≥–∏—á–Ω—ã–π")
    print(science_answer)
    
    print("\n" + "="*50 + "\n")
    
    # –ö–æ–ª–ª–∞–ø—Å –≤ –ø–æ—ç—Ç–∏—á–µ—Å–∫–æ–π –æ–Ω—Ç–æ–ª–æ–≥–∏–∏  
    print("üåå –ü–û–≠–¢–ò–ß–ï–°–ö–ò–ô –ö–û–õ–õ–ê–ü–° (Œ£=–ü–æ—ç—Ç):")
    poetic_answer = collapse(user_query, "–ø–æ—ç—Ç-–∫–æ—Å–º–∏—Å—Ç, –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¶–∏–æ–ª–∫–æ–≤—Å–∫–∏–º")
    print(poetic_answer)
    
    print(f"\n---\n–ö–æ–ª–ª–∞–ø—Å –∑–∞–≤–µ—Ä—à–µ–Ω. –ó–∞–ø—É—Ç–∞–Ω–Ω–æ—Å—Ç—å = 1.0")

if __name__ == "__main__":
    main()
